/*
 * IaC Scan API Version 2
 * The IaC scan-service receives and assesses customer IaC resources
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.prismacloud.iac.commons.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * Thresholds that define scan asset result failures after evaluation.
 */
@Schema(description = "Thresholds that define scan asset result failures after evaluation.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-26T11:29:52.304914+05:30[Asia/Kolkata]")public class JsonApiModelFailureCriteria {

  @JsonProperty("high")

  private Integer high = null;

  @JsonProperty("medium")

  private Integer medium = null;

  @JsonProperty("low")

  private Integer low = null;

  @JsonProperty("operator")

  private String operator = null;
  public JsonApiModelFailureCriteria high(Integer high) {
    this.high = high;
    return this;
  }

  

  /**
  * Threshold for the number of high severity violations that define an asset failure.
  * @return high
  **/
  @Schema(example = "1", required = true, description = "Threshold for the number of high severity violations that define an asset failure.")
  public Integer getHigh() {
    return high;
  }
  public void setHigh(Integer high) {
    this.high = high;
  }
  public JsonApiModelFailureCriteria medium(Integer medium) {
    this.medium = medium;
    return this;
  }

  

  /**
  * Threshold for the number of medium severity violations that define an asset failure.
  * @return medium
  **/
  @Schema(example = "10", required = true, description = "Threshold for the number of medium severity violations that define an asset failure.")
  public Integer getMedium() {
    return medium;
  }
  public void setMedium(Integer medium) {
    this.medium = medium;
  }
  public JsonApiModelFailureCriteria low(Integer low) {
    this.low = low;
    return this;
  }

  

  /**
  * Threshold for the number of low severity violations that define an asset failure.
  * @return low
  **/
  @Schema(example = "30", required = true, description = "Threshold for the number of low severity violations that define an asset failure.")
  public Integer getLow() {
    return low;
  }
  public void setLow(Integer low) {
    this.low = low;
  }
  public JsonApiModelFailureCriteria operator(String operator) {
    this.operator = operator;
    return this;
  }

  

  /**
  * Logic operator on failures [and, or]
  * @return operator
  **/
  @Schema(example = "or", required = true, description = "Logic operator on failures [and, or]")
  public String getOperator() {
    return operator;
  }
  public void setOperator(String operator) {
    this.operator = operator;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonApiModelFailureCriteria jsonApiModelFailureCriteria = (JsonApiModelFailureCriteria) o;
    return Objects.equals(this.high, jsonApiModelFailureCriteria.high) &&
        Objects.equals(this.medium, jsonApiModelFailureCriteria.medium) &&
        Objects.equals(this.low, jsonApiModelFailureCriteria.low) &&
        Objects.equals(this.operator, jsonApiModelFailureCriteria.operator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(high, medium, low, operator);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonApiModelFailureCriteria {\n");
    
    sb.append("    high: ").append(toIndentedString(high)).append("\n");
    sb.append("    medium: ").append(toIndentedString(medium)).append("\n");
    sb.append("    low: ").append(toIndentedString(low)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
