/*
 * IaC Scan API Version 2
 * The IaC scan-service receives and assesses customer IaC resources
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.prismacloud.iac.commons.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * JsonApiModelPage
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-26T11:29:52.304914+05:30[Asia/Kolkata]")public class JsonApiModelPage {

  @JsonProperty("size")

  private Integer size = null;

  @JsonProperty("number")

  private Integer number = null;
  public JsonApiModelPage size(Integer size) {
    this.size = size;
    return this;
  }

  

  /**
  * Get size
  * @return size
  **/
  @Schema(example = "10", description = "")
  public Integer getSize() {
    return size;
  }
  public void setSize(Integer size) {
    this.size = size;
  }
  public JsonApiModelPage number(Integer number) {
    this.number = number;
    return this;
  }

  

  /**
  * Get number
  * @return number
  **/
  @Schema(example = "2", description = "")
  public Integer getNumber() {
    return number;
  }
  public void setNumber(Integer number) {
    this.number = number;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonApiModelPage jsonApiModelPage = (JsonApiModelPage) o;
    return Objects.equals(this.size, jsonApiModelPage.size) &&
        Objects.equals(this.number, jsonApiModelPage.number);
  }

  @Override
  public int hashCode() {
    return Objects.hash(size, number);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonApiModelPage {\n");
    
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
