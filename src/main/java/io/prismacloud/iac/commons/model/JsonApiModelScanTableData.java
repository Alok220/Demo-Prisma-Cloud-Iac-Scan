/*
 * IaC Scan API Version 2
 * The IaC scan-service receives and assesses customer IaC resources
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.prismacloud.iac.commons.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;
import java.util.UUID;

/**
 * Aggregated scan result in {json.api} format
 */
@Schema(description = "Aggregated scan result in {json.api} format")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-26T11:29:52.304914+05:30[Asia/Kolkata]")public class JsonApiModelScanTableData {

  @JsonProperty("id")

  private UUID id = null;

  @JsonProperty("attributes")

  private JsonApiModelScanTableDataAttributes attributes = null;

  @JsonProperty("links")

  private JsonApiModelScanTableDataLinks links = null;

  @JsonProperty("relationships")

  private JsonApiModelScanTableDataRelationships relationships = null;
  public JsonApiModelScanTableData id(UUID id) {
    this.id = id;
    return this;
  }

  

  /**
  * Unique ID of the scan result
  * @return id
  **/
  @Schema(required = true, description = "Unique ID of the scan result")
  public UUID getId() {
    return id;
  }
  public void setId(UUID id) {
    this.id = id;
  }
  public JsonApiModelScanTableData attributes(JsonApiModelScanTableDataAttributes attributes) {
    this.attributes = attributes;
    return this;
  }

  

  /**
  * Get attributes
  * @return attributes
  **/
  @Schema(required = true, description = "")
  public JsonApiModelScanTableDataAttributes getAttributes() {
    return attributes;
  }
  public void setAttributes(JsonApiModelScanTableDataAttributes attributes) {
    this.attributes = attributes;
  }
  public JsonApiModelScanTableData links(JsonApiModelScanTableDataLinks links) {
    this.links = links;
    return this;
  }

  

  /**
  * Get links
  * @return links
  **/
  @Schema(description = "")
  public JsonApiModelScanTableDataLinks getLinks() {
    return links;
  }
  public void setLinks(JsonApiModelScanTableDataLinks links) {
    this.links = links;
  }
  public JsonApiModelScanTableData relationships(JsonApiModelScanTableDataRelationships relationships) {
    this.relationships = relationships;
    return this;
  }

  

  /**
  * Get relationships
  * @return relationships
  **/
  @Schema(description = "")
  public JsonApiModelScanTableDataRelationships getRelationships() {
    return relationships;
  }
  public void setRelationships(JsonApiModelScanTableDataRelationships relationships) {
    this.relationships = relationships;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonApiModelScanTableData jsonApiModelScanTableData = (JsonApiModelScanTableData) o;
    return Objects.equals(this.id, jsonApiModelScanTableData.id) &&
        Objects.equals(this.attributes, jsonApiModelScanTableData.attributes) &&
        Objects.equals(this.links, jsonApiModelScanTableData.links) &&
        Objects.equals(this.relationships, jsonApiModelScanTableData.relationships);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, attributes, links, relationships);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonApiModelScanTableData {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    relationships: ").append(toIndentedString(relationships)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
